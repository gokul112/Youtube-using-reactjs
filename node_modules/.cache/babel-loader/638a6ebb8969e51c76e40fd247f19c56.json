{"ast":null,"code":"import _slicedToArray from\"/Users/graj/projects/Youtube-using-reactjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Paper,TextField}from\"@material-ui/core\";export default(function(_ref){var onSubmit=_ref.onSubmit;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchTerm=_useState2[0],setSearchTerm=_useState2[1];var handleChange=function handleChange(event){return setSearchTerm(event.target.value);};var onKeyPress=function onKeyPress(event){if(event.key===\"Enter\"){onSubmit(searchTerm);}};return/*#__PURE__*/React.createElement(Paper,{elevation:6,style:{padding:\"25px\"}},/*#__PURE__*/React.createElement(TextField,{fullWidth:true,label:\"Search...\",value:searchTerm,onChange:handleChange,onKeyPress:onKeyPress}));});","map":{"version":3,"sources":["/Users/graj/projects/Youtube-using-reactjs/src/components/SearchBar.js"],"names":["React","useState","Paper","TextField","onSubmit","searchTerm","setSearchTerm","handleChange","event","target","value","onKeyPress","key","padding"],"mappings":"iKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,KAAT,CAAgBC,SAAhB,KAAiC,mBAAjC,CAEA,eAAe,cAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eACKH,QAAQ,CAAC,EAAD,CADb,wCACxBI,UADwB,eACZC,aADY,eAG/B,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,QAAWF,CAAAA,aAAa,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAxB,EAArB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACH,KAAD,CAAW,CAC5B,GAAIA,KAAK,CAACI,GAAN,GAAc,OAAlB,CAA2B,CACzBR,QAAQ,CAACC,UAAD,CAAR,CACD,CACF,CAJD,CAMA,mBACE,oBAAC,KAAD,EAAO,SAAS,CAAE,CAAlB,CAAqB,KAAK,CAAE,CAAEQ,OAAO,CAAE,MAAX,CAA5B,eACE,oBAAC,SAAD,EACE,SAAS,KADX,CAEE,KAAK,CAAC,WAFR,CAGE,KAAK,CAAER,UAHT,CAIE,QAAQ,CAAEE,YAJZ,CAKE,UAAU,CAAEI,UALd,EADF,CADF,CAWD,CAtBD","sourcesContent":["import React, { useState } from \"react\";\nimport { Paper, TextField } from \"@material-ui/core\";\n\nexport default ({ onSubmit }) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const handleChange = (event) => setSearchTerm(event.target.value);\n\n  const onKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      onSubmit(searchTerm);\n    }\n  }\n\n  return (\n    <Paper elevation={6} style={{ padding: \"25px\" }}>\n      <TextField\n        fullWidth\n        label=\"Search...\"\n        value={searchTerm}\n        onChange={handleChange}\n        onKeyPress={onKeyPress}\n      />\n    </Paper>\n  );\n}"]},"metadata":{},"sourceType":"module"}